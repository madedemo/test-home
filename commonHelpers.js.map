{"version":3,"file":"commonHelpers.js","sources":["../src/script.js"],"sourcesContent":["// При загрузке документа запускаем асинхронную функцию\ndocument.addEventListener('DOMContentLoaded', async function () {\n  try {\n    // Запрос на получение списка категорий книг\n    const categoriesResponse = await axios.get(\n      'https://books-backend.p.goit.global/books/category-list'\n    );\n    // Получаем данные о категориях книг из ответа\n    const categories = categoriesResponse.data;\n    console.log('Categories:', categories);\n    // Рендерим список категорий\n    renderCategories(categories);\n\n    // Добавляем обработчик события клика на каждую категорию\n    const categoryElements = document.querySelectorAll('.category');\n    categoryElements.forEach(category => {\n      // При клике на категорию получаем название и вызываем функцию фильтрации книг\n      category.addEventListener('click', async () => {\n        const categoryName = category.textContent.trim();\n        try {\n          // Запрос на получение книг выбранной категории\n          const categoryBooksResponse = await axios.get(\n            `https://books-backend.p.goit.global/books/category?category=${categoryName}`\n          );\n          // Получаем данные о книгах из ответа\n          const categoryBooks = categoryBooksResponse.data;\n          console.log(`Books in category \"${categoryName}\":`, categoryBooks);\n          // Рендерим книги выбранной категории\n          renderCategoryBooks(categoryBooks);\n        } catch (error) {\n          console.error(\n            `Error fetching books for category \"${categoryName}\":`,\n            error\n          );\n        }\n      });\n    });\n  } catch (error) {\n    console.error('Error fetching categories:', error);\n  }\n\n  try {\n    // Запрос на получение списка лучших книг\n    const bestSellerBooksResponse = await axios.get(\n      'https://books-backend.p.goit.global/books/top-books'\n    );\n    // Получаем данные о лучших книгах из ответа\n    let bestSellerBooks = bestSellerBooksResponse.data;\n    console.log('Best Seller Books:', bestSellerBooks);\n    // Сортируем список лучших книг по id\n    bestSellerBooks = bestSellerBooks.sort((a, b) => a.id - b.id);\n    // Рендерим список лучших книг\n    renderBestSellerBooks(bestSellerBooks);\n  } catch (error) {\n    console.error('Error fetching best seller books:', error);\n  }\n});\n\n// Функция для рендеринга списка категорий книг\nfunction renderCategories(categories) {\n  const categoriesContainer = document.querySelector('.categories');\n  if (categoriesContainer) {\n    categoriesContainer.innerHTML = '';\n\n    // Создаем заголовок для списка категорий\n    const titleElement = document.createElement('h2');\n    titleElement.textContent = 'All Categories';\n    categoriesContainer.appendChild(titleElement);\n\n    // Для каждой категории создаем элемент и добавляем его в контейнер\n    categories.forEach(category => {\n      const categoryElement = document.createElement('div');\n      categoryElement.classList.add('category');\n      categoryElement.textContent = category.list_name;\n      categoriesContainer.appendChild(categoryElement);\n    });\n  } else {\n    console.error('Categories container not found');\n  }\n}\n\n// Функция для рендеринга списка лучших книг\nfunction renderBestSellerBooks(categories) {\n  const bestSellerBooksContainer = document.getElementById(\n    'bestSellerBooksContainer'\n  );\n  if (bestSellerBooksContainer) {\n    bestSellerBooksContainer.innerHTML = '';\n\n    // Для каждой категории создаем контейнер и добавляем его на страницу\n    categories.forEach(category => {\n      const categoryContainer = document.createElement('div'); // Создание контейнера для категории\n      categoryContainer.classList.add('books-category-container');\n\n      // Создаем заголовок категории и добавляем его в контейнер\n      const categoryTitle = document.createElement('h3');\n      categoryTitle.textContent = category.list_name;\n      categoryTitle.classList.add('books-category-title');\n      categoryContainer.appendChild(categoryTitle);\n\n      // Создаем список книг и добавляем его в контейнер\n      const booksList = document.createElement('ul');\n      booksList.classList.add('books-list');\n\n      // Для каждой книги в категории создаем элемент списка и добавляем его в список\n      category.books.forEach(book => {\n        const bookItem = document.createElement('li');\n        bookItem.classList.add('books-item');\n\n        // Создаем изображение книги и добавляем его в элемент списка\n        const bookImage = document.createElement('img');\n        bookImage.classList.add('books-image');\n        bookImage.src = book.book_image;\n        bookImage.alt = book.title;\n        bookItem.appendChild(bookImage);\n\n        // Создаем блок с информацией о книге и добавляем его в элемент списка\n        const bookDetails = document.createElement('div');\n        bookDetails.classList.add('book-details');\n        bookDetails.innerHTML = `\n          <p><strong>${book.title}</strong></p>\n          <p>${book.author}</p>\n        `;\n        bookItem.appendChild(bookDetails);\n\n        // Добавляем элемент списка в список книг\n        booksList.appendChild(bookItem);\n      });\n\n      // Добавляем список книг в контейнер категории\n      categoryContainer.appendChild(booksList);\n      // Добавляем контейнер категории на страницу\n      bestSellerBooksContainer.appendChild(categoryContainer);\n    });\n  } else {\n    console.error('Best Seller Books container not found');\n  }\n}\n\n// Функция для рендеринга списка книг выбранной категории\nfunction renderCategoryBooks(books) {\n  const categoryBooksContainer = document.getElementById(\n    'bestSellerBooksContainer'\n  );\n  if (categoryBooksContainer) {\n    categoryBooksContainer.innerHTML = '';\n\n    // Создаем список книг и добавляем его на страницу\n    const booksList = document.createElement('ul');\n    booksList.classList.add('books-list');\n\n    // Для каждой книги в списке создаем элемент списка и добавляем его в список\n    books.forEach(book => {\n      const bookItem = document.createElement('li');\n      bookItem.classList.add('books-item');\n\n      // Создаем изображение книги и добавляем его в элемент списка\n      const bookImage = document.createElement('img');\n      bookImage.classList.add('books-image');\n      bookImage.src = book.book_image;\n      bookImage.alt = book.title;\n      bookItem.appendChild(bookImage);\n\n      // Создаем блок с информацией о книге и добавляем его в элемент списка\n      const bookDetails = document.createElement('div');\n      bookDetails.classList.add('book-details');\n      bookDetails.innerHTML = `\n        <p><strong>${book.title}</strong></p>\n        <p>${book.author}</p>\n      `;\n      bookItem.appendChild(bookDetails);\n\n      // Добавляем элемент списка в список книг\n      booksList.appendChild(bookItem);\n    });\n\n    // Добавляем список книг в контейнер\n    categoryBooksContainer.appendChild(booksList);\n  } else {\n    console.error('Category Books container not found');\n  }\n}\n"],"names":["categories","renderCategories","category","categoryName","categoryBooks","renderCategoryBooks","error","bestSellerBooks","a","b","renderBestSellerBooks","categoriesContainer","titleElement","categoryElement","bestSellerBooksContainer","categoryContainer","categoryTitle","booksList","book","bookItem","bookImage","bookDetails","books","categoryBooksContainer"],"mappings":"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"}